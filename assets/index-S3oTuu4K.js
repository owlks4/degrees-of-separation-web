(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))a(r);new MutationObserver(r=>{for(const d of r)if(d.type==="childList")for(const g of d.addedNodes)g.tagName==="LINK"&&g.rel==="modulepreload"&&a(g)}).observe(document,{childList:!0,subtree:!0});function n(r){const d={};return r.integrity&&(d.integrity=r.integrity),r.referrerPolicy&&(d.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?d.credentials="include":r.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function a(r){if(r.ep)return;r.ep=!0;const d=n(r);fetch(r.href,d)}})();let O=[],M=0,R=null,k=[],p=document.getElementById("canvas"),o=p.getContext("2d");o.canvas.width=window.innerWidth;o.canvas.height=window.innerHeight;let y=-window.innerWidth/7,b=-window.innerHeight/14;document.addEventListener("keyup",i=>{let t=20;switch(i.key){case"w":b+=t,H();break;case"s":b-=t,H();break;case"a":y+=t,H();break;case"d":y-=20,H();break}});let P=null;p.addEventListener("mousedown",i=>{P=[i.screenX,i.screenY]});p.addEventListener("mousemove",i=>{P!=null&&(y+=i.screenX-P[0],b+=i.screenY-P[1],P=[i.screenX,i.screenY],H())});p.addEventListener("mouseup",i=>{P=null});function v(i){R=i,H()}function H(){let i=document.getElementById("app");i.innerHTML="",i.appendChild(R.getAnchorTag()),i.appendChild(R.getRelationsDiv()),o.clearRect(0,0,p.width,p.height),R.positionOnSpiderDiagram=[p.width/2,p.height/2],R.drawToCanvas();let t=[R];k.forEach(n=>{t.push(n)}),D(R,t,0,0)}function D(i,t,n,a){n++;let r=[];if(i.relations.forEach(s=>{!t.includes(s.otherPerson)&&s.otherPerson!=i&&(r.push(s),t.push(s.otherPerson))}),r.length==0)return;let d=[],g=400,w=90,m=null,c=null;r.length>16&&(w=4*r.length),r.length==1?d.push(a==0?90:a):r.length>1&&(a==0?(m=90-w/2,c=w/(r.length/2)):(m=a-w/2,c=w/r.length),r.forEach(()=>{d.push(m),a==0&&d.push(-m),m+=c}));for(let s=0;s<r.length;s++){let u=r[s],h=u.otherPerson,f=x(d[s]),E=Math.sin(f)*g,L=Math.cos(f)*g;for(h.positionOnSpiderDiagram=[i.positionOnSpiderDiagram[0]+E,i.positionOnSpiderDiagram[1]+L],o.beginPath(),o.strokeStyle="rgba(128,128,128,0.3)",o.moveTo(y+i.positionOnSpiderDiagram[0]+E/15,b+i.positionOnSpiderDiagram[1]+L/15),o.lineTo(y+i.positionOnSpiderDiagram[0]+E*9/10,b+i.positionOnSpiderDiagram[1]+L*9/10),o.stroke(),o.font="12px Arial",o.fillStyle="rgba(255,255,255,0.75)",o.textAlign="center",o.textBaseline="middle",o.save(),o.translate(y+i.positionOnSpiderDiagram[0]+E/2,b+i.positionOnSpiderDiagram[1]+L/2);f>Math.PI;)f-=Math.PI*2;for(;f<-Math.PI;)f+=Math.PI*2;f>=Math.PI||f<0?(o.rotate(-f-1.5708),o.fillText(h.getImmediateRelationshipTextTo(i),0,0)):(o.rotate(-f+1.5708),o.fillText(u.description,0,0)),o.restore(),h.drawToCanvas()}for(let s=0;s<r.length;s++)console.log("Hmm... this method of evaluating the tree diagram specifically isn't breadth-first! The normal dijkstra works correctly... but in the case of this tree diagram, it needs to make sure it's unfurled in ascending order of level from the centre..."),D(r[s].otherPerson,t,n,d[s])}function x(i){return i*Math.PI/180}function e(i){i=i.toLowerCase();for(let t=0;t<O.length;t++){let n=O[t];if(n.name.toLowerCase()==i)return n}return console.log("Couldn't find person with name: "+i),null}function S(i){i=parseInt(i);for(let t=0;t<O.length;t++){let n=O[t];if(n.id==i)return n}return null}function A(){let i=O[0];return O.forEach(t=>{t.relations.length>i.relations.length&&(i=t)}),i}function I(){return M++}function l(i){O.push(new F(i))}class F{constructor(t){this.id=I(),this.name=t,this.relations=[],this.positionOnSpiderDiagram=[0,0]}addRelation(t,n,a,r){this.relations.push(new T(this,t,n)),r&&t.relations.push(new T(t,this,a))}getAnchorTag(){let t=document.createElement("a");return t.innerHTML="<strong>"+this.name+"</strong>",t.onclick=()=>{v(this)},t}getRelationsDiv(){let t=document.createElement("ul");return this.relations.forEach(n=>{let a=document.createElement("li"),r=document.createElement("a");r.innerHTML=n.description+" <strong>"+(n.otherPerson==this?"themselves":n.otherPerson.name)+"</strong>",r.onclick=()=>{v(n.otherPerson)},a.appendChild(r),t.appendChild(a)}),t}getImmediateRelationshipTextTo(t){let n="is not immediately related to";return this.relations.forEach(a=>{a.otherPerson==t&&(n=a.description)}),n}drawToCanvas(){o.beginPath(),o.arc(y+this.positionOnSpiderDiagram[0],b+this.positionOnSpiderDiagram[1],50,0,2*Math.PI),o.fillStyle="black",o.font="20px Arial",o.fillStyle="white",o.textAlign="center",o.textBaseline="middle",o.fillText(this.name,y+this.positionOnSpiderDiagram[0],b+this.positionOnSpiderDiagram[1])}getAsObjectForJSON(){let t=Array(this.relations.length);for(let n=0;n<this.relations.length;n++)t[n]=this.relations[n].getJSONFriendlyVersion();return{name:this.name,id:this.id,relations:t}}getDegreesOfSeparationFrom(t,n){if(t==this)return this.name+" is 0 degrees away from "+t.name;if(n==null)n=[];else for(let s=0;s<n.length;s++)n[s]=n[s].id;let a={},r={},d=[];a[this.id]=0,r[this.id]=null;let g=!1,w=5e3,m=0;for(;!g&&d.length!=Object.keys(a).length&&!(m>w);){let s=99999999999,u=null;Object.keys(a).forEach(h=>{a[h]<s&&!d.includes(h)&&(s=a[h],u=h)}),d.push(u),S(u).relations.forEach(h=>{!Object.keys(a).includes(h.otherPerson.id+"")&&!n.includes(h.otherPerson.id)&&(a[h.otherPerson.id]=s+1,r[h.otherPerson.id]=S(u),h.otherPerson==t&&(g=!0))}),m++}let c=this.name+" is "+a[t.id]+" degrees away from "+t.name+".";if(n.length>0&&(c+=C(n)),c+=`
`,g){let s=t,u=r[t.id],h=!0;for(;u!=null;){if(c+=s.name+(h?" ":", who ")+s.getImmediateRelationshipTextTo(u),u==this){c+=" "+this.name+".";break}else c+=" ";s=u,u=r[s.id],h=!1}}else c=this.name+" is not connected to "+t.name,n.length>0&&(c+=C(n));return c}}function C(i){let t="";return i.length>0&&(t+=" (Avoiding: ",i.forEach(n=>{t+=S(n).name+" "}),t+=")"),t}class T{constructor(t,n,a){this.person=t,this.otherPerson=n,this.description=a}getJSONFriendlyVersion(){return{personId:this.person.id,otherPersonId:this.otherPerson.id,description:this.description}}}l("Hamlet");l("King Claudius");l("Polonius");l("Horatio");l("Laertes");l("Lucianus");l("Voltimand");l("Cornelius");l("Rosencrantz");l("Guildenstern");l("Osric");l("Gentleman");l("Priest");l("Marcellus");l("Bernardo");l("Francisco");l("Reynaldo");l("Players");l("Clowns");l("Fortinbras");l("Captain");l("English Ambassadors");l("Queen Gertrude");l("Ophelia");l("King Hamlet");l("Old King Fortinbras");l("Yorick");e("Hamlet").addRelation(e("King Claudius"),"despises","is despised by",!0);e("Hamlet").addRelation(e("Horatio"),"is friends with","is friends with",!0);e("Hamlet").addRelation(e("Polonius"),"mortally wounds","is stabbed through a curtain by",!0);e("Hamlet").addRelation(e("Laertes"),"duels","duels",!0);e("Hamlet").addRelation(e("Queen Gertrude"),"is the son of","is the mother of",!0);e("Hamlet").addRelation(e("King Hamlet"),"is the son of","was the father of",!0);e("Queen Gertrude").addRelation(e("King Claudius"),"is the wife of","is husband to",!0);e("Queen Gertrude").addRelation(e("King Hamlet"),"was the wife of","was husband to",!0);e("Old King Fortinbras").addRelation(e("King Hamlet"),"was defeated by","once defeated",!0);e("Ophelia").addRelation(e("Hamlet"),"is potentially in love with","is potentially in love with",!0);e("Ophelia").addRelation(e("Polonius"),"is the daughter of","is the father of",!0);e("Laertes").addRelation(e("Polonius"),"is the daughter of","is the father of",!0);e("Laertes").addRelation(e("Ophelia"),"is the brother of","is sister to",!0);e("Osric").addRelation(e("Laertes"),"oversees a duel for","participates in a duel overseen by",!0);e("Osric").addRelation(e("Hamlet"),"oversees a duel for","participates in a duel overseen by",!0);e("Francisco").addRelation(e("Marcellus"),"guards Elsinore alongside","guards Elsinore alongside",!0);e("Francisco").addRelation(e("Bernardo"),"guards Elsinore alongside","guards Elsinore alongside",!0);e("Marcellus").addRelation(e("Bernardo"),"guards Elsinore alongside","guards Elsinore alongside",!0);e("Marcellus").addRelation(e("King Hamlet"),"sees a ghost resembling","is seen roaming the battlements by",!0);e("Bernardo").addRelation(e("King Hamlet"),"sees a ghost resembling","is seen roaming the battlements by",!0);e("Marcellus").addRelation(e("Horatio"),"brings ghost-related information to","is told about a ghost on the battlements by",!0);e("Marcellus").addRelation(e("Hamlet"),"brings ghost-related information to","is told about his father's ghost by",!0);e("Gentleman").addRelation(e("Ophelia"),"witnesses madness in","exhibits madness in the presence of",!0);e("Gentleman").addRelation(e("Queen Gertrude"),"speaks of Ophelia's madness to","is told about Ophelia's madness by",!0);e("Rosencrantz").addRelation(e("Hamlet"),"is a childhood friend of","is a childhood friend of",!0);e("Guildenstern").addRelation(e("Hamlet"),"is a childhood friend of","is a childhood friend of",!0);e("Rosencrantz").addRelation(e("King Claudius"),"is secretly working for","is secretly employing",!0);e("Guildenstern").addRelation(e("King Claudius"),"is secretly working for","is secretly employing",!0);e("Fortinbras").addRelation(e("Old King Fortinbras"),"is the son of","was the father of",!0);e("Fortinbras").addRelation(e("Hamlet"),"assumes the throne of Denmark after the death of","loses the throne of Denmark to",!0);e("Reynaldo").addRelation(e("Polonius"),"is instructed to spy on Laertes by","entrusts a spying mission to",!0);e("Reynaldo").addRelation(e("Laertes"),"spies on Laertes","is spied on by",!0);e("Players").addRelation(e("Hamlet"),"perform a modified play devised by","devises a modified play to be performed by the",!0);e("Players").addRelation(e("King Claudius"),"inadvertently spook","is shocked at seeing his crime re-enacted by the",!0);e("Yorick").addRelation(e("Hamlet"),"has his skull spoken to by","regrets the death of",!0);e("Clowns").addRelation(e("Ophelia"),"dig a grave for","is buried by the",!0);e("Clowns").addRelation(e("Hamlet"),"trade witticisms with","trades witticisms with the",!0);e("English Ambassadors").addRelation(e("Rosencrantz"),"report the death of","is reported dead by",!0);e("English Ambassadors").addRelation(e("Guildenstern"),"report the death of","is reported dead by",!0);k=[A()];v(S(0));
